unit uHerancaCadastros;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ComCtrls,
  Data.DB, Vcl.DBCtrls, Vcl.Mask, Vcl.Grids, Vcl.DBGrids, uDTMConexao, RxToolEdit,
  ZAbstractRODataset, ZAbstractDataset, ZDataset;

type
  TfrmHerancaCadastros = class(TForm)
    PageControl1      : TPageControl;
    Panel1            : TPanel;
    tabListagem       : TTabSheet;
    tabCadastro       : TTabSheet;
    Panel2            : TPanel;
    grdListagemGrid   : TDBGrid;
    lblIndice         : TLabel;
    mskEdit           : TMaskEdit;
    btnCancelar       : TButton;
    btnExcluir        : TButton;
    btnNavigator      : TDBNavigator;
    btnSair           : TButton;
    btnGravar         : TButton;
    btnAlterar        : TButton;
    btnNovo           : TButton;
    QryListagemGrid   : TZQuery;
    DtsListagemGrid   : TDataSource;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnCancelarClick(Sender: TObject);

    procedure LimparCampos; virtual;

  private
    { Private declarations }

  public
    { Public declarations }
  end;

var
  frmHerancaCadastros : TfrmHerancaCadastros;

implementation

{$R *.dfm}

{$region 'Eventos da propria tela'}

procedure TfrmHerancaCadastros.FormCreate(Sender: TObject);
begin
  QryListagemGrid.Connection          := DtmConexaoPrincipal.ConexaoDB;
  DtsListagemGrid.DataSet             := QryListagemGrid;
  grdListagemGrid.DataSource          := DtsListagemGrid;
end;



procedure TfrmHerancaCadastros.btnCancelarClick(Sender: TObject);
begin
  //LimparCampos;
end;

procedure TfrmHerancaCadastros.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  QryListagemGrid.Close;
end;

{$endregion}



{$region 'Procedimentos e Funções que serão herdadas'}

procedure TfrmHerancaCadastros.LimparCampos;
var i : integer;
begin
  for i := 0 to ComponentCount -1  do
  begin
    if(Components[i] is TLabeledEdit) then
      TLabeledEdit(Components[i]).Text        := EmptyStr;

    if(Components[i] is TMaskEdit) then
      TMaskEdit(Components[i]).Text           := EmptyStr;

    if(Components[i] is TDateTimePicker) then
      TDateEdit(Components[i]).Text           := EmptyStr;
  end;
end;

{$endregion}


end.
